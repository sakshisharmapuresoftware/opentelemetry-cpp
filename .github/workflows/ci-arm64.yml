name: CI-arm64

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cmake_test:
    name: CMake test (without otlp-exporter)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install and Run tests
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
        arm64v8/ubuntu:latest \
        bash -exc 'apt-get update && apt-get -y install python3 python3-pip curl wget && \
        uname -m && \
        ./ci/setup_cmake.sh && \
        ./ci/setup_ci_environment.sh && \
        echo " cmake tests (enable abseil-cpp) " && \
        ./ci/install_abseil.sh && \
        ./ci/do_ci.sh cmake.abseil.test && \
        echo " gcc 4.8 (without otlp exporter) " && \
        ./ci/install_gcc48.sh && \
        CC=/usr/bin/gcc-4.8 CXX=/usr/bin/g++-4.8 ./ci/setup_cmake.sh && \
        export CC= /usr/bin/gcc-4.8 && \
        export CXX=/usr/bin/g++-4.8 && \
        ./ci/do_ci.sh cmake.legacy.test && \
        echo " gcc 4.8 (with otlp exporter) " && \
        CC=/usr/bin/gcc-4.8 CXX=/usr/bin/g++-4.8 ./ci/setup_grpc.sh -v 4.8 && \
        ./ci/do_ci.sh cmake.legacy.exporter.otprotocol.test && \
        echo "  C++20 test " && \
        ./ci/do_ci.sh cmake.c++20.test && \
        ./ci/do_ci.sh cmake.c++20.stl.test && \
        echo " cmake_otprotocol_test" && \
        ./ci/setup_grpc.sh && \
        ./ci/do_ci.sh cmake.exporter.otprotocol.test && \
        echo " plugin_test " && \
        ./ci/do_ci.sh cmake.test_example_plugin && \
        echo " bazel_test" && \
        ./ci/setup_thrift.sh dependencies_only && \
        ./ci/setup_ci_environment.sh && \
        ./ci/install_bazelisk.sh && \
        ./ci/do_ci.sh bazel.test && \
        echo " Bazel with external abseil" && \
        ./ci/do_ci.sh bazel.with_abseil && \
        echo " Bazel valgrind" && \
        ./ci/do_ci.sh bazel.valgrind && \
        echo " Bazel noexcept" && \
        ./ci/do_ci.sh bazel.noexcept && \
        echo "Bazel asan config " && \
        ./ci/do_ci.sh bazel.asan && \
        echo " Bazel tsan config" && \
        ./ci/do_ci.sh bazel.tsan && \
        echo "Benchmark" && \
        export BENCHMARK_DIR=/benchmark && \
        ./ci/do_ci.sh benchmark && \
        echo "Format " && \
        ./ci/install_format_tools.sh && \
        ./ci/do_ci.sh format && \
        echo " Code coverage" && \
        ./ci/do_ci.sh code.coverage && \
        echo " markdown-lint " && \
        npm install -g markdownlint-cli && \
        markdownlint . && \
        echo "misspell" && \
        curl -L -o ./install-misspell.sh https://git.io/misspell && \
        sh ./install-misspell.sh && \
        ./bin/misspell -error . && \
        echo " cmake tests (without otlp-exporter) " && \
        ./ci/setup_thrift.sh && \
        ./ci/do_ci.sh cmake.test && \
        deactivate'
